digraph test { 
	node [shape=box];
	OP0 [label="0 LOAD_GLOBAL (len)" color="black"];
	OP2 [label="2 LOAD_GLOBAL (squares)" color="black"];
	OP4 [label="4 CALL_FUNCTION (1)" color="black"];
	OP6 [label="6 LOAD_CONST (81)" color="blue"];
	OP8 [label="8 COMPARE_OP (2)" color="blue"];
	OP10 [label="10 POP_JUMP_IF_TRUE (8)" color="blue"];
	OP10 -> OP12 [label="Jump (conditional)" color=orange];
	OP10 -> OP16 [label="Jump (conditional)" color=orange];
	OP12 [label="12 LOAD_ASSERTION_ERROR (0)" color="black"];
	OP14 [label="14 RAISE_VARARGS (1)" color="black"];
	OP16 [label="16 LOAD_GLOBAL (len)" color="black"];
	OP18 [label="18 LOAD_GLOBAL (unitlist)" color="black"];
	OP20 [label="20 CALL_FUNCTION (1)" color="black"];
	OP22 [label="22 LOAD_CONST (27)" color="blue"];
	OP24 [label="24 COMPARE_OP (2)" color="blue"];
	OP26 [label="26 POP_JUMP_IF_TRUE (16)" color="blue"];
	OP26 -> OP28 [label="Jump (conditional)" color=orange];
	OP26 -> OP32 [label="Jump (conditional)" color=orange];
	OP28 [label="28 LOAD_ASSERTION_ERROR (0)" color="black"];
	OP30 [label="30 RAISE_VARARGS (1)" color="black"];
	OP32 [label="32 LOAD_GLOBAL (all)" color="black"];
	OP34 [label="34 LOAD_CONST (<code object <genexpr> at 0x10d6b1150, f)" color="black"];
	OP36 [label="36 LOAD_CONST ('test.<locals>.<genexpr>')" color="black"];
	OP38 [label="38 MAKE_FUNCTION (0)" color="black"];
	OP40 [label="40 LOAD_GLOBAL (squares)" color="black"];
	OP42 [label="42 GET_ITER (0)" color="black"];
	OP44 [label="44 CALL_FUNCTION (1)" color="black"];
	OP46 [label="46 CALL_FUNCTION (1)" color="black"];
	OP48 [label="48 POP_JUMP_IF_TRUE (27)" color="red"];
	OP48 -> OP50 [label="Jump (conditional)" color=orange];
	OP48 -> OP54 [label="Jump (conditional)" color=orange];
	OP50 [label="50 LOAD_ASSERTION_ERROR (0)" color="black"];
	OP52 [label="52 RAISE_VARARGS (1)" color="black"];
	OP54 [label="54 LOAD_GLOBAL (all)" color="black"];
	OP56 [label="56 LOAD_CONST (<code object <genexpr> at 0x10d6b1220, f)" color="black"];
	OP58 [label="58 LOAD_CONST ('test.<locals>.<genexpr>')" color="black"];
	OP60 [label="60 MAKE_FUNCTION (0)" color="black"];
	OP62 [label="62 LOAD_GLOBAL (squares)" color="black"];
	OP64 [label="64 GET_ITER (0)" color="black"];
	OP66 [label="66 CALL_FUNCTION (1)" color="black"];
	OP68 [label="68 CALL_FUNCTION (1)" color="black"];
	OP70 [label="70 POP_JUMP_IF_TRUE (38)" color="red"];
	OP70 -> OP72 [label="Jump (conditional)" color=orange];
	OP70 -> OP76 [label="Jump (conditional)" color=orange];
	OP72 [label="72 LOAD_ASSERTION_ERROR (0)" color="black"];
	OP74 [label="74 RAISE_VARARGS (1)" color="black"];
	OP76 [label="76 LOAD_GLOBAL (units)" color="black"];
	OP78 [label="78 LOAD_CONST ('C2')" color="black"];
	OP80 [label="80 BINARY_SUBSCR (0)" color="black"];
	OP82 [label="82 BUILD_LIST (0)" color="black"];
	OP84 [label="84 LOAD_CONST (('A2', 'B2', 'C2', 'D2', 'E2', 'F2', 'G2)" color="black"];
	OP86 [label="86 LIST_EXTEND (1)" color="black"];
	OP88 [label="88 BUILD_LIST (0)" color="black"];
	OP90 [label="90 LOAD_CONST (('C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7)" color="black"];
	OP92 [label="92 LIST_EXTEND (1)" color="black"];
	OP94 [label="94 BUILD_LIST (0)" color="black"];
	OP96 [label="96 LOAD_CONST (('A1', 'A2', 'A3', 'B1', 'B2', 'B3', 'C1)" color="black"];
	OP98 [label="98 LIST_EXTEND (1)" color="black"];
	OP100 [label="100 BUILD_LIST (3)" color="black"];
	OP102 [label="102 COMPARE_OP (2)" color="black"];
	OP104 [label="104 POP_JUMP_IF_TRUE (55)" color="red"];
	OP104 -> OP106 [label="Jump (conditional)" color=orange];
	OP104 -> OP110 [label="Jump (conditional)" color=orange];
	OP106 [label="106 LOAD_ASSERTION_ERROR (0)" color="black"];
	OP108 [label="108 RAISE_VARARGS (1)" color="black"];
	OP110 [label="110 LOAD_GLOBAL (peers)" color="black"];
	OP112 [label="112 LOAD_CONST ('C2')" color="black"];
	OP114 [label="114 BINARY_SUBSCR (0)" color="black"];
	OP116 [label="116 LOAD_GLOBAL (set)" color="black"];
	OP118 [label="118 BUILD_LIST (0)" color="black"];
	OP120 [label="120 LOAD_CONST (('A2', 'B2', 'D2', 'E2', 'F2', 'G2', 'H2)" color="black"];
	OP122 [label="122 LIST_EXTEND (1)" color="black"];
	OP124 [label="124 CALL_FUNCTION (1)" color="black"];
	OP126 [label="126 COMPARE_OP (2)" color="black"];
	OP128 [label="128 POP_JUMP_IF_TRUE (67)" color="red"];
	OP128 -> OP130 [label="Jump (conditional)" color=orange];
	OP128 -> OP134 [label="Jump (conditional)" color=orange];
	OP130 [label="130 LOAD_ASSERTION_ERROR (0)" color="black"];
	OP132 [label="132 RAISE_VARARGS (1)" color="black"];
	OP134 [label="134 LOAD_CONST (None)" color="black"];
	OP136 [label="136 RETURN_VALUE (0)" color="black"];
	OP0 -> OP4 [label="Builtin (function) -1" color=black];
	OP2 -> OP4 [label="Global (list) -0" color=black];
	OP4 -> OP8 [label="Local (int) U1" color=red];
	OP6 -> OP8 [label="Const (int) UN0" color=purple];
	OP8 -> OP10 [label="Intermediate (bool) UN0" color=purple];
	OP12 -> OP14 [label="Intermediate (Any) -0" color=black];
	OP16 -> OP20 [label="Builtin (function) -1" color=black];
	OP18 -> OP20 [label="Global (list) -0" color=black];
	OP20 -> OP24 [label="Local (int) U1" color=red];
	OP22 -> OP24 [label="Const (int) UN0" color=purple];
	OP24 -> OP26 [label="Intermediate (bool) UN0" color=purple];
	OP28 -> OP30 [label="Intermediate (Any) -0" color=black];
	OP34 -> OP38 [label="Const (Any) -1" color=black];
	OP36 -> OP38 [label="Const (str) -0" color=black];
	OP40 -> OP42 [label="Global (list) -0" color=black];
	OP38 -> OP44 [label="Intermediate (function) -1" color=black];
	OP42 -> OP44 [label="Intermediate (list_iterator) -0" color=black];
	OP32 -> OP46 [label="Builtin (function) -1" color=black];
	OP44 -> OP46 [label="Local (Any) -0" color=black];
	OP46 -> OP48 [label="Local (bool) -0" color=black];
	OP50 -> OP52 [label="Intermediate (Any) -0" color=black];
	OP56 -> OP60 [label="Const (Any) -1" color=black];
	OP58 -> OP60 [label="Const (str) -0" color=black];
	OP62 -> OP64 [label="Global (list) -0" color=black];
	OP60 -> OP66 [label="Intermediate (function) -1" color=black];
	OP64 -> OP66 [label="Intermediate (list_iterator) -0" color=black];
	OP54 -> OP68 [label="Builtin (function) -1" color=black];
	OP66 -> OP68 [label="Local (Any) -0" color=black];
	OP68 -> OP70 [label="Local (bool) -0" color=black];
	OP72 -> OP74 [label="Intermediate (Any) -0" color=black];
	OP76 -> OP80 [label="Global (dict) -1" color=black];
	OP78 -> OP80 [label="Const (str) -0" color=black];
	OP82 -> OP86 [label="Intermediate (list) -1" color=black];
	OP84 -> OP86 [label="Const (tuple) -0" color=black];
	OP88 -> OP92 [label="Intermediate (list) -1" color=black];
	OP90 -> OP92 [label="Const (tuple) -0" color=black];
	OP94 -> OP98 [label="Intermediate (list) -1" color=black];
	OP96 -> OP98 [label="Const (tuple) -0" color=black];
	OP86 -> OP100 [label="Intermediate (list) -2" color=black];
	OP92 -> OP100 [label="Intermediate (list) -1" color=black];
	OP98 -> OP100 [label="Intermediate (list) -0" color=black];
	OP80 -> OP102 [label="Intermediate (list) -1" color=black];
	OP100 -> OP102 [label="Intermediate (list) -0" color=black];
	OP102 -> OP104 [label="Intermediate (bool) -0" color=black];
	OP106 -> OP108 [label="Intermediate (Any) -0" color=black];
	OP110 -> OP114 [label="Global (dict) -1" color=black];
	OP112 -> OP114 [label="Const (str) -0" color=black];
	OP118 -> OP122 [label="Intermediate (list) -1" color=black];
	OP120 -> OP122 [label="Const (tuple) -0" color=black];
	OP116 -> OP124 [label="Builtin (type) -1" color=black];
	OP122 -> OP124 [label="Intermediate (list) -0" color=black];
	OP114 -> OP126 [label="Intermediate (set) -1" color=black];
	OP124 -> OP126 [label="Local (set) -0" color=black];
	OP126 -> OP128 [label="Intermediate (bool) -0" color=black];
	OP130 -> OP132 [label="Intermediate (Any) -0" color=black];
	OP134 -> OP136 [label="Const (None) -0" color=black];
}
digraph parse_grid { 
	node [shape=box];
	OP0 [label="0 LOAD_GLOBAL (dict)" color="black"];
	OP2 [label="2 LOAD_CONST (<code object <genexpr> at 0x10d6b1490, f)" color="black"];
	OP4 [label="4 LOAD_CONST ('parse_grid.<locals>.<genexpr>')" color="black"];
	OP6 [label="6 MAKE_FUNCTION (0)" color="black"];
	OP8 [label="8 LOAD_GLOBAL (squares)" color="black"];
	OP10 [label="10 GET_ITER (0)" color="black"];
	OP12 [label="12 CALL_FUNCTION (1)" color="black"];
	OP14 [label="14 CALL_FUNCTION (1)" color="black"];
	OP16 [label="16 STORE_FAST (values)" color="black"];
	OP18 [label="18 LOAD_GLOBAL (grid_values)" color="black"];
	OP20 [label="20 LOAD_FAST (grid)" color="black"];
	OP22 [label="22 CALL_FUNCTION (1)" color="black"];
	OP24 [label="24 LOAD_METHOD (items)" color="black"];
	OP26 [label="26 CALL_METHOD (0)" color="black"];
	OP28 [label="28 GET_ITER (0)" color="black"];
	OP30 [label="30 FOR_ITER (17)" color="black"];
	OP30 -> OP32 [label="Jump (conditional)" color=orange];
	OP30 -> OP66 [label="Jump (conditional)" color=orange];
	OP32 [label="32 UNPACK_SEQUENCE (2)" color="black"];
	OP34 [label="34 STORE_FAST (s)" color="black"];
	OP36 [label="36 STORE_FAST (d)" color="black"];
	OP38 [label="38 LOAD_FAST (d)" color="black"];
	OP40 [label="40 LOAD_GLOBAL (digits)" color="black"];
	OP42 [label="42 CONTAINS_OP (0)" color="black"];
	OP44 [label="44 POP_JUMP_IF_FALSE (32)" color="red"];
	OP44 -> OP46 [label="Jump (conditional)" color=orange];
	OP44 -> OP64 [label="Jump (conditional)" color=orange];
	OP46 [label="46 LOAD_GLOBAL (assign)" color="black"];
	OP48 [label="48 LOAD_FAST (values)" color="black"];
	OP50 [label="50 LOAD_FAST (s)" color="black"];
	OP52 [label="52 LOAD_FAST (d)" color="black"];
	OP54 [label="54 CALL_FUNCTION (3)" color="black"];
	OP56 [label="56 POP_JUMP_IF_TRUE (32)" color="black"];
	OP56 -> OP58 [label="Jump (conditional)" color=orange];
	OP56 -> OP64 [label="Jump (conditional)" color=orange];
	OP58 [label="58 POP_TOP (0)" color="black"];
	OP60 [label="60 LOAD_CONST (False)" color="red"];
	OP62 [label="62 RETURN_VALUE (0)" color="black"];
	OP64 [label="64 JUMP_ABSOLUTE (15)" color="black"];
	OP64 -> OP30 [label="Jump" color=yellow];
	OP66 [label="66 LOAD_FAST (values)" color="black"];
	OP68 [label="68 RETURN_VALUE (0)" color="black"];
	OP2 -> OP6 [label="Const (Any) -1" color=black];
	OP4 -> OP6 [label="Const (str) -0" color=black];
	OP8 -> OP10 [label="Global (list) -0" color=black];
	OP6 -> OP12 [label="Intermediate (function) -1" color=black];
	OP10 -> OP12 [label="Intermediate (list_iterator) -0" color=black];
	OP0 -> OP14 [label="Builtin (type) -1" color=black];
	OP12 -> OP14 [label="Local (Any) -0" color=black];
	OP14 -> OP16 [label="Local (dict) -0" color=black];
	OP18 -> OP22 [label="Global (function) -1" color=black];
	OP20 -> OP22 [label="Local (str) -0" color=black];
	OP22 -> OP24 [label="Local (Any) -0" color=black];
	OP24 -> OP26 [label="Intermediate (Any) -1" color=black];
	OP24 -> OP26 [label="Method (method) -0" color=black];
	OP26 -> OP28 [label="Intermediate (Any) -0" color=black];
	OP28 -> OP30 [label="Intermediate (Any) -0" color=black];
	OP30 -> OP32 [label="Intermediate (tuple) -0" color=black];
	OP32 -> OP34 [label="Intermediate (Any) -0" color=black];
	OP32 -> OP36 [label="Intermediate (Any) -0" color=black];
	OP38 -> OP42 [label="Local (Any) -1" color=black];
	OP40 -> OP42 [label="Global (str) -0" color=black];
	OP42 -> OP44 [label="Intermediate (bool) -0" color=black];
	OP46 -> OP54 [label="Global (function) -3" color=black];
	OP48 -> OP54 [label="Local (dict) -2" color=black];
	OP50 -> OP54 [label="Local (str) -1" color=black];
	OP52 -> OP54 [label="Local (str) -0" color=black];
	OP54 -> OP56 [label="Local (Any) -0" color=black];
	OP30 -> OP58 [label="Intermediate (Any) -0" color=black];
	OP60 -> OP62 [label="Const (bool) -0" color=black];
	OP66 -> OP68 [label="Local (dict) -0" color=black];
}
digraph grid_values { 
	node [shape=box];
	OP0 [label="0 LOAD_CONST (<code object <listcomp> at 0x10d6b1630, )" color="black"];
	OP2 [label="2 LOAD_CONST ('grid_values.<locals>.<listcomp>')" color="black"];
	OP4 [label="4 MAKE_FUNCTION (0)" color="black"];
	OP6 [label="6 LOAD_FAST (grid)" color="black"];
	OP8 [label="8 GET_ITER (0)" color="black"];
	OP10 [label="10 CALL_FUNCTION (1)" color="black"];
	OP12 [label="12 STORE_FAST (chars)" color="black"];
	OP14 [label="14 LOAD_GLOBAL (len)" color="black"];
	OP16 [label="16 LOAD_FAST (chars)" color="black"];
	OP18 [label="18 CALL_FUNCTION (1)" color="black"];
	OP20 [label="20 LOAD_CONST (81)" color="blue"];
	OP22 [label="22 COMPARE_OP (2)" color="blue"];
	OP24 [label="24 POP_JUMP_IF_TRUE (15)" color="blue"];
	OP24 -> OP26 [label="Jump (conditional)" color=orange];
	OP24 -> OP30 [label="Jump (conditional)" color=orange];
	OP26 [label="26 LOAD_ASSERTION_ERROR (0)" color="black"];
	OP28 [label="28 RAISE_VARARGS (1)" color="black"];
	OP30 [label="30 LOAD_GLOBAL (dict)" color="black"];
	OP32 [label="32 LOAD_GLOBAL (zip)" color="black"];
	OP34 [label="34 LOAD_GLOBAL (squares)" color="black"];
	OP36 [label="36 LOAD_FAST (chars)" color="black"];
	OP38 [label="38 CALL_FUNCTION (2)" color="black"];
	OP40 [label="40 CALL_FUNCTION (1)" color="black"];
	OP42 [label="42 RETURN_VALUE (0)" color="black"];
	OP0 -> OP4 [label="Const (Any) -1" color=black];
	OP2 -> OP4 [label="Const (str) -0" color=black];
	OP6 -> OP8 [label="Local (str) -0" color=black];
	OP4 -> OP10 [label="Intermediate (function) -1" color=black];
	OP8 -> OP10 [label="Intermediate (str_iterator) -0" color=black];
	OP10 -> OP12 [label="Local (Any) -0" color=black];
	OP14 -> OP18 [label="Builtin (function) -1" color=black];
	OP16 -> OP18 [label="Local (list) -0" color=black];
	OP18 -> OP22 [label="Local (int) U1" color=red];
	OP20 -> OP22 [label="Const (int) UN0" color=purple];
	OP22 -> OP24 [label="Intermediate (bool) UN0" color=purple];
	OP26 -> OP28 [label="Intermediate (Any) -0" color=black];
	OP32 -> OP38 [label="Builtin (type) -2" color=black];
	OP34 -> OP38 [label="Global (list) -1" color=black];
	OP36 -> OP38 [label="Local (list) -0" color=black];
	OP30 -> OP40 [label="Builtin (type) -1" color=black];
	OP38 -> OP40 [label="Local (zip) -0" color=black];
	OP40 -> OP42 [label="Local (dict) -0" color=black];
}
digraph assign { 
	node [shape=box];
	OP0 [label="0 LOAD_DEREF (1)" color="black"];
	OP2 [label="2 LOAD_DEREF (0)" color="black"];
	OP4 [label="4 BINARY_SUBSCR (0)" color="black"];
	OP6 [label="6 LOAD_METHOD (replace)" color="black"];
	OP8 [label="8 LOAD_FAST (d)" color="black"];
	OP10 [label="10 LOAD_CONST ('')" color="black"];
	OP12 [label="12 CALL_METHOD (2)" color="black"];
	OP14 [label="14 STORE_FAST (other_values)" color="black"];
	OP16 [label="16 LOAD_GLOBAL (all)" color="black"];
	OP18 [label="18 LOAD_CLOSURE (0)" color="black"];
	OP20 [label="20 LOAD_CLOSURE (1)" color="black"];
	OP22 [label="22 BUILD_TUPLE (2)" color="black"];
	OP24 [label="24 LOAD_CONST (<code object <genexpr> at 0x10d6b17d0, f)" color="black"];
	OP26 [label="26 LOAD_CONST ('assign.<locals>.<genexpr>')" color="black"];
	OP28 [label="28 MAKE_FUNCTION (8)" color="black"];
	OP30 [label="30 LOAD_FAST (other_values)" color="black"];
	OP32 [label="32 GET_ITER (0)" color="black"];
	OP34 [label="34 CALL_FUNCTION (1)" color="black"];
	OP36 [label="36 CALL_FUNCTION (1)" color="black"];
	OP38 [label="38 POP_JUMP_IF_FALSE (22)" color="red"];
	OP38 -> OP40 [label="Jump (conditional)" color=orange];
	OP38 -> OP44 [label="Jump (conditional)" color=orange];
	OP40 [label="40 LOAD_DEREF (1)" color="black"];
	OP42 [label="42 RETURN_VALUE (0)" color="black"];
	OP44 [label="44 LOAD_CONST (False)" color="red"];
	OP46 [label="46 RETURN_VALUE (0)" color="black"];
	OP0 -> OP4 [label="Intermediate (dict) -1" color=black];
	OP2 -> OP4 [label="Intermediate (str) -0" color=black];
	OP4 -> OP6 [label="Intermediate (Any) -0" color=black];
	OP6 -> OP12 [label="Intermediate (Any) -3" color=black];
	OP6 -> OP12 [label="Method (method) -2" color=black];
	OP8 -> OP12 [label="Local (str) -1" color=black];
	OP10 -> OP12 [label="Const (str) -0" color=black];
	OP12 -> OP14 [label="Intermediate (Any) -0" color=black];
	OP18 -> OP22 [label="Intermediate (Any) -1" color=black];
	OP20 -> OP22 [label="Intermediate (Any) -0" color=black];
	OP22 -> OP28 [label="Intermediate (tuple) -2" color=black];
	OP24 -> OP28 [label="Const (Any) -1" color=black];
	OP26 -> OP28 [label="Const (str) -0" color=black];
	OP30 -> OP32 [label="Local (Any) -0" color=black];
	OP28 -> OP34 [label="Intermediate (function) -1" color=black];
	OP32 -> OP34 [label="Intermediate (str_iterator) -0" color=black];
	OP16 -> OP36 [label="Builtin (function) -1" color=black];
	OP34 -> OP36 [label="Local (Any) -0" color=black];
	OP36 -> OP38 [label="Local (bool) -0" color=black];
	OP40 -> OP42 [label="Intermediate (Any) -0" color=black];
	OP44 -> OP46 [label="Const (bool) -0" color=black];
}
digraph eliminate { 
	node [shape=box];
	OP0 [label="0 LOAD_DEREF (0)" color="black"];
	OP2 [label="2 LOAD_DEREF (2)" color="black"];
	OP4 [label="4 LOAD_FAST (s)" color="black"];
	OP6 [label="6 BINARY_SUBSCR (0)" color="black"];
	OP8 [label="8 CONTAINS_OP (1)" color="black"];
	OP10 [label="10 POP_JUMP_IF_FALSE (8)" color="red"];
	OP10 -> OP12 [label="Jump (conditional)" color=orange];
	OP10 -> OP16 [label="Jump (conditional)" color=orange];
	OP12 [label="12 LOAD_DEREF (2)" color="black"];
	OP14 [label="14 RETURN_VALUE (0)" color="black"];
	OP16 [label="16 LOAD_DEREF (2)" color="black"];
	OP18 [label="18 LOAD_FAST (s)" color="black"];
	OP20 [label="20 BINARY_SUBSCR (0)" color="black"];
	OP22 [label="22 LOAD_METHOD (replace)" color="black"];
	OP24 [label="24 LOAD_DEREF (0)" color="black"];
	OP26 [label="26 LOAD_CONST ('')" color="black"];
	OP28 [label="28 CALL_METHOD (2)" color="black"];
	OP30 [label="30 LOAD_DEREF (2)" color="black"];
	OP32 [label="32 LOAD_FAST (s)" color="black"];
	OP34 [label="34 STORE_SUBSCR (0)" color="black"];
	OP36 [label="36 LOAD_GLOBAL (len)" color="black"];
	OP38 [label="38 LOAD_DEREF (2)" color="black"];
	OP40 [label="40 LOAD_FAST (s)" color="black"];
	OP42 [label="42 BINARY_SUBSCR (0)" color="black"];
	OP44 [label="44 CALL_FUNCTION (1)" color="black"];
	OP46 [label="46 LOAD_CONST (0)" color="blue"];
	OP48 [label="48 COMPARE_OP (2)" color="blue"];
	OP50 [label="50 POP_JUMP_IF_FALSE (28)" color="blue"];
	OP50 -> OP52 [label="Jump (conditional)" color=orange];
	OP50 -> OP56 [label="Jump (conditional)" color=orange];
	OP52 [label="52 LOAD_CONST (False)" color="red"];
	OP54 [label="54 RETURN_VALUE (0)" color="black"];
	OP56 [label="56 LOAD_GLOBAL (len)" color="black"];
	OP58 [label="58 LOAD_DEREF (2)" color="black"];
	OP60 [label="60 LOAD_FAST (s)" color="black"];
	OP62 [label="62 BINARY_SUBSCR (0)" color="black"];
	OP64 [label="64 CALL_FUNCTION (1)" color="black"];
	OP66 [label="66 LOAD_CONST (1)" color="blue"];
	OP68 [label="68 COMPARE_OP (2)" color="blue"];
	OP70 [label="70 POP_JUMP_IF_FALSE (56)" color="blue"];
	OP70 -> OP72 [label="Jump (conditional)" color=orange];
	OP70 -> OP112 [label="Jump (conditional)" color=orange];
	OP72 [label="72 LOAD_DEREF (2)" color="black"];
	OP74 [label="74 LOAD_FAST (s)" color="black"];
	OP76 [label="76 BINARY_SUBSCR (0)" color="black"];
	OP78 [label="78 STORE_DEREF (1)" color="black"];
	OP80 [label="80 LOAD_GLOBAL (all)" color="black"];
	OP82 [label="82 LOAD_CLOSURE (1)" color="black"];
	OP84 [label="84 LOAD_CLOSURE (2)" color="black"];
	OP86 [label="86 BUILD_TUPLE (2)" color="black"];
	OP88 [label="88 LOAD_CONST (<code object <genexpr> at 0x10d6b1970, f)" color="black"];
	OP90 [label="90 LOAD_CONST ('eliminate.<locals>.<genexpr>')" color="black"];
	OP92 [label="92 MAKE_FUNCTION (8)" color="black"];
	OP94 [label="94 LOAD_GLOBAL (peers)" color="black"];
	OP96 [label="96 LOAD_FAST (s)" color="black"];
	OP98 [label="98 BINARY_SUBSCR (0)" color="black"];
	OP100 [label="100 GET_ITER (0)" color="black"];
	OP102 [label="102 CALL_FUNCTION (1)" color="black"];
	OP104 [label="104 CALL_FUNCTION (1)" color="black"];
	OP106 [label="106 POP_JUMP_IF_TRUE (56)" color="red"];
	OP106 -> OP108 [label="Jump (conditional)" color=orange];
	OP106 -> OP112 [label="Jump (conditional)" color=orange];
	OP108 [label="108 LOAD_CONST (False)" color="red"];
	OP110 [label="110 RETURN_VALUE (0)" color="black"];
	OP112 [label="112 LOAD_GLOBAL (units)" color="black"];
	OP114 [label="114 LOAD_FAST (s)" color="black"];
	OP116 [label="116 BINARY_SUBSCR (0)" color="black"];
	OP118 [label="118 GET_ITER (0)" color="black"];
	OP120 [label="120 FOR_ITER (38)" color="black"];
	OP120 -> OP122 [label="Jump (conditional)" color=orange];
	OP120 -> OP198 [label="Jump (conditional)" color=orange];
	OP122 [label="122 STORE_FAST (u)" color="black"];
	OP124 [label="124 LOAD_CLOSURE (0)" color="black"];
	OP126 [label="126 LOAD_CLOSURE (2)" color="black"];
	OP128 [label="128 BUILD_TUPLE (2)" color="black"];
	OP130 [label="130 LOAD_CONST (<code object <listcomp> at 0x10d6b1a40, )" color="black"];
	OP132 [label="132 LOAD_CONST ('eliminate.<locals>.<listcomp>')" color="black"];
	OP134 [label="134 MAKE_FUNCTION (8)" color="black"];
	OP136 [label="136 LOAD_FAST (u)" color="black"];
	OP138 [label="138 GET_ITER (0)" color="black"];
	OP140 [label="140 CALL_FUNCTION (1)" color="black"];
	OP142 [label="142 STORE_FAST (dplaces)" color="black"];
	OP144 [label="144 LOAD_GLOBAL (len)" color="black"];
	OP146 [label="146 LOAD_FAST (dplaces)" color="black"];
	OP148 [label="148 CALL_FUNCTION (1)" color="black"];
	OP150 [label="150 LOAD_CONST (0)" color="blue"];
	OP152 [label="152 COMPARE_OP (2)" color="blue"];
	OP154 [label="154 POP_JUMP_IF_FALSE (81)" color="blue"];
	OP154 -> OP156 [label="Jump (conditional)" color=orange];
	OP154 -> OP162 [label="Jump (conditional)" color=orange];
	OP156 [label="156 POP_TOP (0)" color="black"];
	OP158 [label="158 LOAD_CONST (False)" color="red"];
	OP160 [label="160 RETURN_VALUE (0)" color="black"];
	OP162 [label="162 LOAD_GLOBAL (len)" color="black"];
	OP164 [label="164 LOAD_FAST (dplaces)" color="black"];
	OP166 [label="166 CALL_FUNCTION (1)" color="black"];
	OP168 [label="168 LOAD_CONST (1)" color="blue"];
	OP170 [label="170 COMPARE_OP (2)" color="blue"];
	OP172 [label="172 POP_JUMP_IF_FALSE (98)" color="blue"];
	OP172 -> OP174 [label="Jump (conditional)" color=orange];
	OP172 -> OP196 [label="Jump (conditional)" color=orange];
	OP174 [label="174 LOAD_GLOBAL (assign)" color="black"];
	OP176 [label="176 LOAD_DEREF (2)" color="black"];
	OP178 [label="178 LOAD_FAST (dplaces)" color="black"];
	OP180 [label="180 LOAD_CONST (0)" color="red"];
	OP182 [label="182 BINARY_SUBSCR (0)" color="black"];
	OP184 [label="184 LOAD_DEREF (0)" color="black"];
	OP186 [label="186 CALL_FUNCTION (3)" color="black"];
	OP188 [label="188 POP_JUMP_IF_TRUE (98)" color="black"];
	OP188 -> OP190 [label="Jump (conditional)" color=orange];
	OP188 -> OP196 [label="Jump (conditional)" color=orange];
	OP190 [label="190 POP_TOP (0)" color="black"];
	OP192 [label="192 LOAD_CONST (False)" color="red"];
	OP194 [label="194 RETURN_VALUE (0)" color="black"];
	OP196 [label="196 JUMP_ABSOLUTE (60)" color="black"];
	OP196 -> OP120 [label="Jump" color=yellow];
	OP198 [label="198 LOAD_DEREF (2)" color="black"];
	OP200 [label="200 RETURN_VALUE (0)" color="black"];
	OP2 -> OP6 [label="Intermediate (dict) -1" color=black];
	OP4 -> OP6 [label="Local (str) -0" color=black];
	OP0 -> OP8 [label="Intermediate (Any) -1" color=black];
	OP6 -> OP8 [label="Intermediate (Any) -0" color=black];
	OP8 -> OP10 [label="Intermediate (bool) -0" color=black];
	OP12 -> OP14 [label="Intermediate (Any) -0" color=black];
	OP16 -> OP20 [label="Intermediate (dict) -1" color=black];
	OP18 -> OP20 [label="Local (str) -0" color=black];
	OP20 -> OP22 [label="Intermediate (Any) -0" color=black];
	OP22 -> OP28 [label="Intermediate (Any) -3" color=black];
	OP22 -> OP28 [label="Method (method) -2" color=black];
	OP24 -> OP28 [label="Intermediate (str) -1" color=black];
	OP26 -> OP28 [label="Const (str) -0" color=black];
	OP28 -> OP34 [label="Intermediate (str) -2" color=black];
	OP30 -> OP34 [label="Intermediate (dict) -1" color=black];
	OP32 -> OP34 [label="Local (str) -0" color=black];
	OP38 -> OP42 [label="Intermediate (dict) -1" color=black];
	OP40 -> OP42 [label="Local (str) -0" color=black];
	OP36 -> OP44 [label="Builtin (function) -1" color=black];
	OP42 -> OP44 [label="Intermediate (str) -0" color=black];
	OP44 -> OP48 [label="Local (int) U1" color=red];
	OP46 -> OP48 [label="Const (int) UN0" color=purple];
	OP48 -> OP50 [label="Intermediate (bool) UN0" color=purple];
	OP52 -> OP54 [label="Const (bool) -0" color=black];
	OP58 -> OP62 [label="Intermediate (dict) -1" color=black];
	OP60 -> OP62 [label="Local (str) -0" color=black];
	OP56 -> OP64 [label="Builtin (function) -1" color=black];
	OP62 -> OP64 [label="Intermediate (str) -0" color=black];
	OP64 -> OP68 [label="Local (int) U1" color=red];
	OP66 -> OP68 [label="Const (int) UN0" color=purple];
	OP68 -> OP70 [label="Intermediate (bool) UN0" color=purple];
	OP72 -> OP76 [label="Intermediate (Any) -1" color=black];
	OP74 -> OP76 [label="Local (str) -0" color=black];
	OP76 -> OP78 [label="Intermediate (Any) -0" color=black];
	OP82 -> OP86 [label="Intermediate (Any) -1" color=black];
	OP84 -> OP86 [label="Intermediate (Any) -0" color=black];
	OP86 -> OP92 [label="Intermediate (tuple) -2" color=black];
	OP88 -> OP92 [label="Const (Any) -1" color=black];
	OP90 -> OP92 [label="Const (str) -0" color=black];
	OP94 -> OP98 [label="Global (dict) -1" color=black];
	OP96 -> OP98 [label="Local (str) -0" color=black];
	OP98 -> OP100 [label="Intermediate (Any) -0" color=black];
	OP92 -> OP102 [label="Intermediate (function) -1" color=black];
	OP100 -> OP102 [label="Intermediate (Any) -0" color=black];
	OP80 -> OP104 [label="Builtin (function) -1" color=black];
	OP102 -> OP104 [label="Local (Any) -0" color=black];
	OP104 -> OP106 [label="Local (bool) -0" color=black];
	OP108 -> OP110 [label="Const (bool) -0" color=black];
	OP112 -> OP116 [label="Global (dict) -1" color=black];
	OP114 -> OP116 [label="Local (str) -0" color=black];
	OP116 -> OP118 [label="Intermediate (Any) -0" color=black];
	OP118 -> OP120 [label="Intermediate (Any) -0" color=black];
	OP120 -> OP122 [label="Intermediate (Any) -0" color=black];
	OP124 -> OP128 [label="Intermediate (Any) -1" color=black];
	OP126 -> OP128 [label="Intermediate (Any) -0" color=black];
	OP128 -> OP134 [label="Intermediate (tuple) -2" color=black];
	OP130 -> OP134 [label="Const (Any) -1" color=black];
	OP132 -> OP134 [label="Const (str) -0" color=black];
	OP136 -> OP138 [label="Local (Any) -0" color=black];
	OP134 -> OP140 [label="Intermediate (function) -1" color=black];
	OP138 -> OP140 [label="Intermediate (list_iterator) -0" color=black];
	OP140 -> OP142 [label="Local (Any) -0" color=black];
	OP144 -> OP148 [label="Builtin (function) -1" color=black];
	OP146 -> OP148 [label="Local (list) -0" color=black];
	OP148 -> OP152 [label="Local (int) U1" color=red];
	OP150 -> OP152 [label="Const (int) UN0" color=purple];
	OP152 -> OP154 [label="Intermediate (bool) UN0" color=purple];
	OP120 -> OP156 [label="Intermediate (Any) -0" color=black];
	OP158 -> OP160 [label="Const (bool) -0" color=black];
	OP162 -> OP166 [label="Builtin (function) -1" color=black];
	OP164 -> OP166 [label="Local (list) -0" color=black];
	OP166 -> OP170 [label="Local (int) U1" color=red];
	OP168 -> OP170 [label="Const (int) UN0" color=purple];
	OP170 -> OP172 [label="Intermediate (bool) UN0" color=purple];
	OP178 -> OP182 [label="Local (Any) -1" color=black];
	OP180 -> OP182 [label="Const (int) -0" color=black];
	OP174 -> OP186 [label="Global (function) -3" color=black];
	OP176 -> OP186 [label="Intermediate (Any) -2" color=black];
	OP182 -> OP186 [label="Intermediate (Any) -1" color=black];
	OP184 -> OP186 [label="Intermediate (Any) -0" color=black];
	OP186 -> OP188 [label="Local (Any) -0" color=black];
	OP120 -> OP190 [label="Intermediate (Any) -0" color=black];
	OP192 -> OP194 [label="Const (bool) -0" color=black];
	OP198 -> OP200 [label="Intermediate (Any) -0" color=black];
}
digraph solve { 
	node [shape=box];
	OP0 [label="0 LOAD_GLOBAL (search)" color="black"];
	OP2 [label="2 LOAD_GLOBAL (parse_grid)" color="black"];
	OP4 [label="4 LOAD_FAST (grid)" color="black"];
	OP6 [label="6 CALL_FUNCTION (1)" color="black"];
	OP8 [label="8 CALL_FUNCTION (1)" color="black"];
	OP10 [label="10 RETURN_VALUE (0)" color="black"];
	OP2 -> OP6 [label="Global (function) -1" color=black];
	OP4 -> OP6 [label="Local (str) -0" color=black];
	OP0 -> OP8 [label="Global (function) -1" color=black];
	OP6 -> OP8 [label="Local (dict) -0" color=black];
	OP8 -> OP10 [label="Local (Any) -0" color=black];
}
digraph search { 
	node [shape=box];
	OP0 [label="0 LOAD_DEREF (1)" color="black"];
	OP2 [label="2 LOAD_CONST (False)" color="red"];
	OP4 [label="4 IS_OP (0)" color="black"];
	OP6 [label="6 POP_JUMP_IF_FALSE (6)" color="red"];
	OP6 -> OP8 [label="Jump (conditional)" color=orange];
	OP6 -> OP12 [label="Jump (conditional)" color=orange];
	OP8 [label="8 LOAD_CONST (False)" color="red"];
	OP10 [label="10 RETURN_VALUE (0)" color="black"];
	OP12 [label="12 LOAD_GLOBAL (all)" color="black"];
	OP14 [label="14 LOAD_CLOSURE (1)" color="black"];
	OP16 [label="16 BUILD_TUPLE (1)" color="black"];
	OP18 [label="18 LOAD_CONST (<code object <genexpr> at 0x10d6b1f20, f)" color="black"];
	OP20 [label="20 LOAD_CONST ('search.<locals>.<genexpr>')" color="black"];
	OP22 [label="22 MAKE_FUNCTION (8)" color="black"];
	OP24 [label="24 LOAD_GLOBAL (squares)" color="black"];
	OP26 [label="26 GET_ITER (0)" color="black"];
	OP28 [label="28 CALL_FUNCTION (1)" color="black"];
	OP30 [label="30 CALL_FUNCTION (1)" color="black"];
	OP32 [label="32 POP_JUMP_IF_FALSE (19)" color="red"];
	OP32 -> OP34 [label="Jump (conditional)" color=orange];
	OP32 -> OP38 [label="Jump (conditional)" color=orange];
	OP34 [label="34 LOAD_DEREF (1)" color="black"];
	OP36 [label="36 RETURN_VALUE (0)" color="black"];
	OP38 [label="38 LOAD_GLOBAL (min)" color="black"];
	OP40 [label="40 LOAD_CLOSURE (1)" color="black"];
	OP42 [label="42 BUILD_TUPLE (1)" color="black"];
	OP44 [label="44 LOAD_CONST (<code object <genexpr> at 0x10d6b1ff0, f)" color="black"];
	OP46 [label="46 LOAD_CONST ('search.<locals>.<genexpr>')" color="black"];
	OP48 [label="48 MAKE_FUNCTION (8)" color="black"];
	OP50 [label="50 LOAD_GLOBAL (squares)" color="black"];
	OP52 [label="52 GET_ITER (0)" color="black"];
	OP54 [label="54 CALL_FUNCTION (1)" color="black"];
	OP56 [label="56 CALL_FUNCTION (1)" color="black"];
	OP58 [label="58 UNPACK_SEQUENCE (2)" color="black"];
	OP60 [label="60 STORE_FAST (n)" color="black"];
	OP62 [label="62 STORE_DEREF (0)" color="black"];
	OP64 [label="64 LOAD_GLOBAL (some)" color="black"];
	OP66 [label="66 LOAD_CLOSURE (0)" color="black"];
	OP68 [label="68 LOAD_CLOSURE (1)" color="black"];
	OP70 [label="70 BUILD_TUPLE (2)" color="black"];
	OP72 [label="72 LOAD_CONST (<code object <genexpr> at 0x10d6b20c0, f)" color="black"];
	OP74 [label="74 LOAD_CONST ('search.<locals>.<genexpr>')" color="black"];
	OP76 [label="76 MAKE_FUNCTION (8)" color="black"];
	OP78 [label="78 LOAD_DEREF (1)" color="black"];
	OP80 [label="80 LOAD_DEREF (0)" color="black"];
	OP82 [label="82 BINARY_SUBSCR (0)" color="black"];
	OP84 [label="84 GET_ITER (0)" color="black"];
	OP86 [label="86 CALL_FUNCTION (1)" color="black"];
	OP88 [label="88 CALL_FUNCTION (1)" color="black"];
	OP90 [label="90 RETURN_VALUE (0)" color="black"];
	OP0 -> OP4 [label="Intermediate (Any) -1" color=black];
	OP2 -> OP4 [label="Const (bool) -0" color=black];
	OP4 -> OP6 [label="Intermediate (bool) -0" color=black];
	OP8 -> OP10 [label="Const (bool) -0" color=black];
	OP14 -> OP16 [label="Intermediate (Any) -0" color=black];
	OP16 -> OP22 [label="Intermediate (tuple) -2" color=black];
	OP18 -> OP22 [label="Const (Any) -1" color=black];
	OP20 -> OP22 [label="Const (str) -0" color=black];
	OP24 -> OP26 [label="Global (list) -0" color=black];
	OP22 -> OP28 [label="Intermediate (function) -1" color=black];
	OP26 -> OP28 [label="Intermediate (list_iterator) -0" color=black];
	OP12 -> OP30 [label="Builtin (function) -1" color=black];
	OP28 -> OP30 [label="Local (Any) -0" color=black];
	OP30 -> OP32 [label="Local (bool) -0" color=black];
	OP34 -> OP36 [label="Intermediate (Any) -0" color=black];
	OP40 -> OP42 [label="Intermediate (Any) -0" color=black];
	OP42 -> OP48 [label="Intermediate (tuple) -2" color=black];
	OP44 -> OP48 [label="Const (Any) -1" color=black];
	OP46 -> OP48 [label="Const (str) -0" color=black];
	OP50 -> OP52 [label="Global (list) -0" color=black];
	OP48 -> OP54 [label="Intermediate (function) -1" color=black];
	OP52 -> OP54 [label="Intermediate (list_iterator) -0" color=black];
	OP38 -> OP56 [label="Builtin (function) -1" color=black];
	OP54 -> OP56 [label="Local (Any) -0" color=black];
	OP56 -> OP58 [label="Local (tuple) -0" color=black];
	OP58 -> OP60 [label="Intermediate (Any) -0" color=black];
	OP58 -> OP62 [label="Intermediate (Any) -0" color=black];
	OP66 -> OP70 [label="Intermediate (Any) -1" color=black];
	OP68 -> OP70 [label="Intermediate (Any) -0" color=black];
	OP70 -> OP76 [label="Intermediate (tuple) -2" color=black];
	OP72 -> OP76 [label="Const (Any) -1" color=black];
	OP74 -> OP76 [label="Const (str) -0" color=black];
	OP78 -> OP82 [label="Intermediate (dict) -1" color=black];
	OP80 -> OP82 [label="Intermediate (str) -0" color=black];
	OP82 -> OP84 [label="Intermediate (Any) -0" color=black];
	OP76 -> OP86 [label="Intermediate (function) -1" color=black];
	OP84 -> OP86 [label="Intermediate (str_iterator) -0" color=black];
	OP64 -> OP88 [label="Global (function) -1" color=black];
	OP86 -> OP88 [label="Local (Any) -0" color=black];
	OP88 -> OP90 [label="Local (Any) -0" color=black];
}
digraph some { 
	node [shape=box];
	OP0 [label="0 LOAD_FAST (seq)" color="black"];
	OP2 [label="2 GET_ITER (0)" color="black"];
	OP4 [label="4 FOR_ITER (8)" color="black"];
	OP4 -> OP6 [label="Jump (conditional)" color=orange];
	OP4 -> OP22 [label="Jump (conditional)" color=orange];
	OP6 [label="6 STORE_FAST (e)" color="black"];
	OP8 [label="8 LOAD_FAST (e)" color="black"];
	OP10 [label="10 POP_JUMP_IF_FALSE (10)" color="black"];
	OP10 -> OP12 [label="Jump (conditional)" color=orange];
	OP10 -> OP20 [label="Jump (conditional)" color=orange];
	OP12 [label="12 LOAD_FAST (e)" color="black"];
	OP14 [label="14 ROT_TWO (0)" color="black"];
	OP16 [label="16 POP_TOP (0)" color="black"];
	OP18 [label="18 RETURN_VALUE (0)" color="black"];
	OP20 [label="20 JUMP_ABSOLUTE (2)" color="black"];
	OP20 -> OP4 [label="Jump" color=yellow];
	OP22 [label="22 LOAD_CONST (False)" color="red"];
	OP24 [label="24 RETURN_VALUE (0)" color="black"];
	OP0 -> OP2 [label="Local (generator) -0" color=black];
	OP2 -> OP4 [label="Intermediate (Any) -0" color=black];
	OP4 -> OP6 [label="Intermediate (Any) -0" color=black];
	OP8 -> OP10 [label="Local (Any) -0" color=black];
	OP4 -> OP14 [label="Intermediate (Any) -1" color=black];
	OP12 -> OP14 [label="Local (Any) -0" color=black];
	OP14 -> OP16 [label="Intermediate (Any) -0" color=black];
	OP14 -> OP18 [label="Intermediate (Any) -0" color=black];
	OP22 -> OP24 [label="Const (bool) -0" color=black];
}
digraph bench_sudoku { 
	node [shape=box];
	OP0 [label="0 LOAD_GLOBAL (test)" color="black"];
	OP2 [label="2 CALL_FUNCTION (0)" color="black"];
	OP4 [label="4 POP_TOP (0)" color="black"];
	OP6 [label="6 LOAD_GLOBAL (solve)" color="black"];
	OP8 [label="8 LOAD_GLOBAL (hard1)" color="black"];
	OP10 [label="10 CALL_FUNCTION (1)" color="black"];
	OP12 [label="12 POP_TOP (0)" color="black"];
	OP14 [label="14 LOAD_CONST (None)" color="black"];
	OP16 [label="16 RETURN_VALUE (0)" color="black"];
	OP0 -> OP2 [label="Global (function) -0" color=black];
	OP2 -> OP4 [label="Local (Any) -0" color=black];
	OP6 -> OP10 [label="Global (function) -1" color=black];
	OP8 -> OP10 [label="Global (str) -0" color=black];
	OP10 -> OP12 [label="Local (Any) -0" color=black];
	OP14 -> OP16 [label="Const (None) -0" color=black];
}
