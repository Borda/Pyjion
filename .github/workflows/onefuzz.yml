# Example Github Actions pipeline
#
# This uses an AAD Service Principal to authenticate to Onefuzz.
# See https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals
#
# This uses a Microsoft Teams Incoming Webhook to create Teams messages upon finding crashes.
# See https://github.com/microsoft/onefuzz/blob/main/docs/notifications/teams.md
#
# This uses the following variables, defined in the variable group 'onefuzz-config':
# * endpoint: The Onefuzz Instance
# * client_id: The Client ID for the service principal
#
# This uses the following secret variables, defined in the variable group 'onefuzz-config':
# * client_secret: The Client Secret for the service principal
# * teams_url: The Incoming Webhook for Teams

name: Onefuzz

on:
  push:
    branches: [ develop/main ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.10"]
        dot-net-version: [6.0.101]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install CLR requirements
        run: |
          sudo apt-get -y update
          sudo apt-get install -y cmake llvm-9 clang-9 autoconf automake \
          libtool build-essential python curl git lldb-6.0 liblldb-6.0-dev \
          libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-dev \
          libssl-dev libnuma-dev libkrb5-dev zlib1g-dev
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dot-net-version }}

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=ON

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: submit onefuzz job
        env:
          ONEFUZZ_ENDPOINT: ${{ secrets.onefuzz_endpoint }}
          ONEFUZZ_CLIENT_ID: ${{ secrets.onefuzz_client_id }}
          ONEFUZZ_CLIENT_SECRET: ${{ secrets.onefuzz_client_secret }}
          ONEFUZZ_TEAMS_URL: ${{ secrets.teams_url }}
        run: |
          set -ex
          pip install onefuzz
          onefuzz config --endpoint $ONEFUZZ_ENDPOINT --client_id $ONEFUZZ_CLIENT_ID --client_secret $ONEFUZZ_CLIENT_SECRET
          sed -i s/INSERT_TEAMS_WEBHOOK_URL_HERE/${ONEFUZZ_TEAMS_URL}/ notifications/teams-message.json
          cd examples/simple-libfuzzer
          onefuzz template libfuzzer basic samples sample-1 $GITHUB_SHA --target_exe fuzz.exe --notification_config @../../notifications/teams-message.json
