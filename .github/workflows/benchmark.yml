name: Benchmarks

on:
  push:
    branches: [ develop/main, develop/3.10 ]
  pull_request:
    branches: [ develop/main, develop/3.10 ]

jobs:
  benchmark:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-20.04", "MacOS-11", "Windows-2022"]
        python-version: ["3.10"]
        dot-net-version: [ "7.0.100" ]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install CLR requirements
        if: runner.os == 'Linux'
        run: |
          sudo apt-get -y update
          sudo apt-get install -y cmake llvm-9 clang-9 autoconf automake \
            libtool build-essential python curl git lldb-6.0 liblldb-6.0-dev \
            libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-dev \
            libssl-dev libnuma-dev libkrb5-dev zlib1g-dev
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dot-net-version }}

      - name: Build & install Python Package [Unix]
        if: runner.os != 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.3.1
      - name: Create Build Environment
        if: runner.os == 'Windows'
        run: cmake -E make_directory ${{runner.workspace}}/build
      - name: Configure & Build CMake
        if: runner.os == 'Windows'
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
      - name: Build & install Python Package [Windows]
        if: runner.os == 'Windows'
        run: |
          python -m pip install -U scikit-build
          python setup.py build
          python setup.py install

      - name: Run benchmark tests
        run: |
          python -m pip install -r Tests/requirements_test.txt
          python Tests/benchmarks/suite.py
